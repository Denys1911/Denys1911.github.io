{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","onFilterChange","filter","map","clazz","key","onClick","TodoListItem","important","onDeleted","onToggleDone","onToggleImportant","classNames","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onInputChange","onSubmit","preventDefault","onItemAdded","App","maxId","createTodoItem","todoData","deleteItem","index","findIndex","slice","addItem","text","newItem","toggleProperty","arr","propName","oldElement","newElement","search","items","length","RegExp","test","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d9a592a.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, done}) => {\r\n    return (\r\n      <div className=\"app-header d-sm-flex text-center\">\r\n          <h1>Todo List</h1>\r\n          <h2>{todo} more to do, {done} done</h2>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = e => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n   render() {\r\n       return (\r\n           <input type=\"text\"\r\n                  className=\"form-control search-input sm\"\r\n                  placeholder='Search...'\r\n                  value={this.state.term}\r\n                  onChange={this.onSearchChange}\r\n           />\r\n       )\r\n   }\r\n};\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render() {\r\n        const {onFilterChange, filter} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = name === filter,\r\n                clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React from \"react\";\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({label, done, important, onDeleted, onToggleDone, onToggleImportant}) => {\r\n    let classNames = 'todo-list-item';\r\n\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n\r\n    return (\r\n        <span className={classNames}>\r\n            <span className=\"todo-list-item-label\"\r\n                  onClick={onToggleDone}>\r\n                  {label}\r\n            </span>\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\"/>\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}\r\n            >\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleDone, onToggleImportant}) => {\r\n    const elements = todos.map(item => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n           <li key={id} className=\"list-group-item\">\r\n               <TodoListItem\r\n                   {...itemProps}\r\n                   onDeleted={() => onDeleted(id)}\r\n                   onToggleDone={() => onToggleDone(id)}\r\n                   onToggleImportant={() => onToggleImportant(id)}\r\n               />\r\n           </li>\r\n        );\r\n    });\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onInputChange = e => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       placeholder=\"What needs to be done...\"\r\n                       onChange={this.onInputChange}\r\n                       value={this.state.label}\r\n                />\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component{\r\n    maxId = 1;\r\n\r\n    createTodoItem = label => {\r\n       return {\r\n           label,\r\n           done: false,\r\n           important: false,\r\n           id: this.maxId++,\r\n       }\r\n    };\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink coffee'),\r\n            this.createTodoItem('Make awesome app'),\r\n            this.createTodoItem('Do homework in Hillel'),\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    deleteItem = id => {\r\n        this.setState(({todoData}) => {\r\n            const index = todoData.findIndex(item => item.id === id),\r\n                newArray = [\r\n                    ...todoData.slice(0, index),\r\n                    ...todoData.slice(index + 1)\r\n                ];\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = text => {\r\n        const newItem = this.createTodoItem(text);\r\n        this.setState(({todoData}) => {\r\n            const newArray = [\r\n                ...todoData, newItem\r\n            ];\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleProperty = (arr, id, propName) => {\r\n        const index = arr.findIndex(item => item.id === id),\r\n            oldElement = arr[index],\r\n            newElement = {...oldElement, [propName]: !oldElement[propName]};\r\n            return [\r\n                ...arr.slice(0, index),\r\n                newElement,\r\n                ...arr.slice(index + 1)\r\n            ];\r\n    };\r\n\r\n    onToggleDone = id => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    onToggleImportant = id => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    };\r\n\r\n    onSearchChange = term => {\r\n        this.setState({term})\r\n    };\r\n\r\n    onFilterChange = filter => {\r\n        this.setState({filter})\r\n    };\r\n\r\n    search = (items, text) => {\r\n        if (text.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            const regexp = new RegExp(text, 'gi');\r\n            return regexp.test(item.label);\r\n        });\r\n    };\r\n\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter(item => !item.done);\r\n            case 'done':\r\n                return items.filter(item => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state,\r\n            visibleItems = this.filter(this.search(todoData, term), filter),\r\n            doneCount = todoData.filter(item => item.done).length,\r\n            todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader todo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-sm-flex text-center\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter onFilterChange={this.onFilterChange}\r\n                                      filter={filter}\r\n                    />\r\n                </div>\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleDone={this.onToggleDone}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                />\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}